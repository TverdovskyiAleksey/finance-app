{"version":3,"sources":["Components/Auth/images/reg-img.png","Components/Auth/images/account_box.svg","Views/RegisterView.js"],"names":["RegisterView","dispatch","useDispatch","BorderLinearProgress","styled","LinearProgress","theme","height","top","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","validationSchema","yup","shape","name","min","max","typeError","required","password","matches","rePassword","oneOf","email","className","styles","register","regLeft","regImg","src","alt","regTitle","regRight","initialValues","validateOnBlur","onSubmit","resetForm","authOperations","values","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","registerForm","form","autoComplete","logo","logoImg","title","input","style","backgroundImage","mail","type","value","placeholder","onChange","onBlur","error","pas","variant","acc","btn","btnReg","to","button"],"mappings":"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","file":"static/js/6.9925f42f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reg-img.d67c8f90.png\";","export default __webpack_public_path__ + \"static/media/account_box.0e2c487d.svg\";","import { useDispatch } from 'react-redux';\r\n// import { useState , useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { authOperations } from '../Redux/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../Components/Auth/Auth.module.css';\r\n\r\nimport regImg from '../Components/Auth/images/reg-img.png';\r\nimport logo from '../Components/Auth/images/logo.png';\r\nimport pas from '../Components/Auth/images/lock.svg';\r\nimport acc from '../Components/Auth/images/account_box.svg';\r\nimport mail from '../Components/Auth/images/email.svg';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport LinearProgress, {\r\n  linearProgressClasses,\r\n} from '@mui/material/LinearProgress';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 4,\r\n    top: 10,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n      backgroundColor:\r\n        theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n      borderRadius: 5,\r\n      backgroundColor: theme.palette.mode === 'light' ? '#24CCA7' : '#308fe8',\r\n    },\r\n  }));\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .min(1, 'Введите ваше имя')\r\n      .max(12, 'Максимальная длина имени 12 символов')\r\n      .typeError('Должно быть строкой')\r\n      .required('Обязательно'),\r\n    password: yup\r\n      .string()\r\n      .matches(/[0-9a-zA-Z!@#$%^&*]/, 'Недопустимые символы для пароля')\r\n      .min(6, 'Пароль должен быть не менее 6 символов')\r\n      .max(12, 'Максимальная длина пароля 12 символов')\r\n      .typeError('Должно быть строкой')\r\n      .required('Обязательноe поле'),\r\n    rePassword: yup\r\n      .string()\r\n      .oneOf([yup.ref('password')], 'Пароли не совпадают'),\r\n    email: yup\r\n      .string()\r\n      .email('Введите корректный email')\r\n      .required('Обязательноe поле'),\r\n  });\r\n  return (\r\n    <div className={styles.register}>\r\n      <div className={styles.regLeft}>\r\n        <img className={styles.regImg} src={regImg} alt={'regImg'}></img>\r\n        <p className={styles.regTitle}>Finance App</p>\r\n      </div>\r\n      <div className={styles.regRight}>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            rePassword: '',\r\n          }}\r\n          validateOnBlur\r\n          onSubmit={({ email, password, name }, { resetForm }) => {\r\n            dispatch(authOperations.register({ email, password, name }));\r\n            resetForm();\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty,\r\n          }) => (\r\n            <div className={styles.registerForm}>\r\n              <form\r\n                className={styles.form}\r\n                onSubmit={handleSubmit}\r\n                autoComplete=\"off\"\r\n              >\r\n                <div className={styles.logo}>\r\n                  <img className={styles.logoImg} src={logo} alt=\"logo\" />\r\n                  <p className={styles.title}>Wallet</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    className={styles.input}\r\n                    style={{ backgroundImage: 'url(' + mail + ')' }}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    placeholder=\"E-mail\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {touched.email && errors.email && (\r\n                    <p className={styles.error}>{errors.email}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className={styles.input}\r\n                    style={{ backgroundImage: 'url(' + pas + ')' }}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Пароль\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {touched.password && errors.password && (\r\n                    <p className={styles.error}>{errors.password}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className={styles.input}\r\n                    style={{ backgroundImage: 'url(' + pas + ')' }}\r\n                    type=\"password\"\r\n                    name=\"rePassword\"\r\n                    value={values.rePassword}\r\n                    placeholder=\"Подтвердите пароль\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {touched.rePassword && errors.rePassword && (\r\n                    <p className={styles.error}>{errors.rePassword}</p>\r\n                  )}\r\n                </div>\r\n                <BorderLinearProgress variant=\"determinate\" value={50} />\r\n                <div>\r\n                  <input\r\n                    className={styles.input}\r\n                    style={{ backgroundImage: 'url(' + acc + ')' }}\r\n                    type=\"name\"\r\n                    name=\"name\"\r\n                    value={values.name}\r\n                    placeholder=\"Ваше имя\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {touched.name && errors.name && (\r\n                    <p className={styles.error}>{errors.name}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={styles.btn}>\r\n                  <button className={styles.btnReg} type=\"submit\">\r\n                    Регистрация\r\n                  </button>\r\n                  <Link to=\"/login\" className={styles.button}>\r\n                    Вход\r\n                  </Link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}